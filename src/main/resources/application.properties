# data source
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:forum-spring
spring.datasource.username=sa
spring.datasource.password=

# jpa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true

# h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Open feign
financial.analysis.url = http://localhost:9999/api/solicitacao
#feign.client.config.nomeFeignClienteDefinidoNoBean.read-timeout=100
# 1000ms
feign.client.config.analysis.connect-timeout=1000
health.check.url = http://localhost:8080/actuator/health
card.api.url = http://localhost:8888/api/cartoes

# oAuth - Keycloak
## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/master}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/master/protocol/openid-connect/certs}

# Prometheus Micrometer - Activate endpoint /actuator/prometheus
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true

# Prometheus New metric
management.metrics.tags.application=${APPLICATION_NAME:proposal service}
management.metrics.tags.environment=${ENVIRONMENT:development}

# Prometheus security
management.endpoints.web.exposure.exclude=env,beans

# Jaeger
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Service Name
opentracing.jaeger.service-name=${APPLICATION_NAME:proposal service}
# Jaeger - Where to send data (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Sampling method (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

#Security Crypto
crypto.secret=${CRYPTO_SECRET:this-is-my-secret}


